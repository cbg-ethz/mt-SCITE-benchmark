# Snakefile

import itertools

configfile: "config.yaml"

seeds = range(1, 2)

# Define the rule to simulate data for all combinations
rule all:
    input:
        expand(
            "../results/inference_output/{num_mutations}_{concentration}_{error_rate}_{num_reads}_{num_cells}/scite_{seed}_ml0.newick",
            num_mutations=config['num_mutations'],
            concentration=config['concentration'],
            error_rate=config['error_rate'],
            num_reads=config['num_reads'],
            num_cells=config['num_cells'],
            seed=seeds
        )


rule simulate_data:
    output:
        "../results/simulated_data/{num_mutations}_{concentration}_{error_rate}_{num_reads}_{num_cells}/tree_{seed}.gml",
        "../results/simulated_data/{num_mutations}_{concentration}_{error_rate}_{num_reads}_{num_cells}/read_counts_{seed}.npy"

    params:
        num_mutations=lambda wildcards: wildcards.num_mutations,
        concentration=lambda wildcards: wildcards.concentration,
        error_rate=lambda wildcards: wildcards.error_rate,
        num_reads=lambda wildcards: wildcards.num_reads,
        num_cells=lambda wildcards: wildcards.num_cells,
        seed=lambda wildcards: wildcards.seed

    shell: """python ../src/simulation/simulate_data.py {params.num_mutations} {params.concentration} {params.error_rate} {params.num_reads} {params.num_cells} ../results/simulated_data/{wildcards.num_mutations}_{wildcards.concentration}_{wildcards.error_rate}_{wildcards.num_reads}_{wildcards.num_cells} {params.seed}"""


rule adapt_data_for_scite:
    input:
        "../results/simulated_data/{num_mutations}_{concentration}_{error_rate}_{num_reads}_{num_cells}/read_counts_{seed}.npy"
    output:
        "../results/simulated_data/{num_mutations}_{concentration}_{error_rate}_{num_reads}_{num_cells}/scite_input_{seed}.txt"

    shell:"""python ../src/simulation/adapt_data_for_scite.py ../results/simulated_data/{wildcards.num_mutations}_{wildcards.concentration}_{wildcards.error_rate}_{wildcards.num_reads}_{wildcards.num_cells}/read_counts.npy ../results/simulated_data/{wildcards.num_mutations}_{wildcards.concentration}_{wildcards.error_rate}_{wildcards.num_reads}_{wildcards.num_cells}/ {wildcards.seed}"""

rule run_scite:
    input:
        "../results/simulated_data/{num_mutations}_{concentration}_{error_rate}_{num_reads}_{num_cells}/scite_input_{seed}.txt"
    output: "../results/inference_output/{num_mutations}_{concentration}_{error_rate}_{num_reads}_{num_cells}/scite_{seed}_ml0.newick"
    shell:"""./../software/SCITE/scite -n {wildcards.num_mutations} -m {wildcards.num_cells} -r 1 -l 1000000 -fd {wildcards.error_rate} -ad 0.000001 -max_treelist_size 1  -i ../results/simulated_data/{wildcards.num_mutations}_{wildcards.concentration}_{wildcards.error_rate}_{wildcards.num_reads}_{wildcards.num_cells}/scite_input.txt -o ../results/inference_output/{wildcards.num_mutations}_{wildcards.concentration}_{wildcards.error_rate}_{wildcards.num_reads}_{wildcards.num_cells}/scite_{wildcards.seed}"""
